# new PREFIX bind
unbind C-b
set -g prefix C-s
bind C-s send-prefix

# sourcing tmux conf
bind r source-file ~/.tmux.conf

# vimlike binding for pane navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# vimlike splits
bind-key v split-window -h
bind-key s split-window -v

# pane resizing
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# pretty terminal names
set -g set-titles on
set -g default-terminal "xterm-256color"
set -g default-terminal "xterm-256color"
set -ag terminal-overrides ',xterm-256color:Tc'

# don't rename windows automatically
set-option -g allow-rename off

# VI mode yanking
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "xclip -selection c"

# mouse mode
set -g mouse on

# Use OSC clipboard for remote copy over ssh
set-option -g set-clipboard on

# Theme
white='#dcd7ba'
gray='#2a2a37'
dark_gray='#1a1a22'
light_purple='#363646'
dark_purple='#54546D'
cyan='#6a9589'
green='#938aa9'
orange='#dca561'
red='#e46876'
pink='#d27e99'
yellow='#ff9e3b'

# pane border styling
set-option -g pane-active-border-style "fg=${light_purple}"
set-option -g pane-border-style "fg=${gray}"
set-option -g pane-border-format "#{?pane_active,#[fg=dark_purple],#[fg=dark_grey]} ⎇#{pane_index} "

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'

# Auto hide pane-border-status line when only one pane is displayed (see tmux/tmux#566)
set-hook -g 'after-new-session'  'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-split-window' 'run-shell -b "if [ \#{window_panes} -gt 1 ]; then tmux set pane-border-status bottom; fi"'

set-option -g status-style "bg=default"
set-option -g status-left ""
if-shell 'test -n "$SSH_CLIENT" || test -n "$SSH_CONNECTION"' \
    'set-option -g status-right "#[fg=black,bg=yellow] 󱩊 #(whoami)@#H "' \
    'set-option -g status-right "#[fg=white,bg=default] 󱩊 #(whoami)@localhost"'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# Move left (C-h)
bind-key -n C-h if-shell "$is_vim" \
    "send-keys C-h" \
    "select-pane -L"

# Move down (C-j)
bind-key -n C-j if-shell "$is_vim" \
    "send-keys C-j" \
    "select-pane -D"

# Move up (C-k)
bind-key -n C-k if-shell "$is_vim" \
    "send-keys C-k" \
    "select-pane -U"

# Move right (C-l)
bind-key -n C-l if-shell "$is_vim" \
    "send-keys C-l" \
    "select-pane -R"

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# bind-key -n 'C-,' if-shell "$is_vim" 'send-keys C-,' 'select-pane -t:.+'
bind-key -n 'C-,' run-shell ' \
    if [ "$(tmux display-message -p "#{pane_current_command}")" = "nvim" ]; then
        tmux send-keys C-w w;
        # Check if we returned to the starting split
        sleep 0.1; # Small delay for Vim to process <C-w>w
        if [ "$(tmux display-message -p "#{pane_current_command}")" = "nvim" ] && \
           [ "$(tmux display-message -p "#{pane_active}")" = "1" ]; then
            # If still in Neovim and no change, move to the next tmux pane
            tmux select-pane -t :.+
        fi;
    else
        if ! tmux select-pane -t :.+
        then
            # Wrap around windows when reaching the last one
            if [ "$(tmux display-message -p "#{window_index}")" = "$(($(tmux list-windows | wc -l) - 1))" ]; then
                tmux select-window -t 0;
            else
                tmux next-window;
            fi;
        fi;
    fi
'

bind-key -n M-0 select-pane -t 0
bind-key -n M-1 select-pane -t 1
bind-key -n M-2 select-pane -t 2
bind-key -n M-3 select-pane -t 3
bind-key -n M-4 select-pane -t 4
bind-key -n M-5 select-pane -t 5
bind-key -n M-6 select-pane -t 6
bind-key -n M-7 select-pane -t 7
bind-key -n M-8 select-pane -t 8
bind-key -n M-9 select-pane -t 9

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-,' select-pane -t:.+

set -sg escape-time 0
